//			************************
//			**     SM  Marine     **
//			** TweakScale Support **
//			************************
//
//	This file is part of "TweakScale Companion for SMCE"
//		© 2020-2023 Lisias T : http://lisias.net <support@lisias.net>
//
//	"TweakScale Companion for SMCE" is double licensed, as follows:
//		* SKL 1.0 : https://ksp.lisias.net/SKL-1_0.txt
//		* GPL 2.0 : https://www.gnu.org/licenses/gpl-2.0.txt
//
//	And you are allowed to choose the License that better suit your needs.
//
//	"TweakScale Companion for SMCE" is distributed in the hope that it will be useful,
//	but WITHOUT ANY WARRANTY; without even the implied warranty of
//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
//
//	You should have received a copy of the SKL Standard License 1.0
//	along with "TweakScale Companion for SMCE". If not, see <https://ksp.lisias.net/SKL-1_0.txt>.
//
//	You should have received a copy of the GNU General Public License 2.0
//	along with "TweakScale Companion for SMCE". If not, see <https://www.gnu.org/licenses/>.
//


// ** none **

@PART[1SecRail]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // 1SecRail
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[1x1Tristructuralpanel]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // 1x1Tristructuralpanel
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[1x1slopestructuralPanel]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // 1x1slope Structural Panel
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[1x1structuralPanel]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // SMSE1x1 Structural Panel
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[2SecRail]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // 2SecRail
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[2x1slopestructuralPanel]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // 2x1slope Structural Panel
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[2x1structuralPanel]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // 2x1 Structural Panel
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[2x2structuralPanel]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // SMSE2x2Structural Panel
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[3SecRail]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // 3SecRail
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[3x1structuralPanel]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // 3x1 Structural Panel
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[3x3structuralPanel]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // SMSE3x3Structural Panel
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[4mtrLadder]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // 4mtrLadder
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[4x1structuralPanel]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // 4x1 Structural Panel
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[4x4structuralPanel]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // SMSE4x4 Structural Panel
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[5SecRail]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // 5SecRail
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[AirIntakeMast]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Air Intake Mast
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[AirIntakeMast2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Air Intake Mast2
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[AnmiHeliNets]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Animated HeliDecks Safety Net
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[AnmiHeliNetsTypeB]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Animated HeliDecks Safety Net TypeB
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[ArtRadarScanner]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Artisan Style Radar Unit
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[BlankHovModule]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Blank Hover Module
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[BlankHovModuleL]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Blank Hover Module Long
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Bollards]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Bollards
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[CKbridgeAft]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // CK bridgeAft (part4)
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['Size3']
	}
}

@PART[CKbridgeBase]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // CK bridgeBase (part2)
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[CKgunMount]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // CK gun Mount
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['Size3']
	}
}

@PART[CKmidSuper]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // CK midSuper (part3)
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['Size3']
	}
}

@PART[CKsuperAftBase]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // CK super Aft Base (part9)
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['Size3']
	}
}

@PART[CKsuperFwdLower]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // CK super Fwd Lower (part5)
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['Size3']
	}
}

@PART[CKsuperMidBase]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // CK crew accommodation (part8)
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[CKvlsCover]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // CK VLS space Cover
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[ComsMastB]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Coms Mast without navlights
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[ComsMastL]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Coms Mast with Navlights
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[CrewQuartersTest]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Crew accommodation
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[CrewQuartersdummy1X2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dummy Crew accommodation pair
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[CrewQuartersdummy2X2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dummy Crew accommodation alternate pair
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[CruiserKitHull]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // CK Cruiser Kit Hull (part7)
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[CruiserKitHull2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // CK Cruiser Kit VLS Hull (part7x)
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DSRVbow]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DSRVbow
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DSRVcore]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DSRVcore
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DSRVdrive]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DSRVdrive
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallasTestTorp18]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque MK1 Torpedo (DallasTestTorp18)
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueCMpod]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque CM pod
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueConHumpHullSection2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque Hump Hull Section2
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueConTower1]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque ConTower1
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueConTower2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque Con Tower2
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueConformalSonar]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque Conformal Sonar
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueCrewSpaceEXPhs2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DallesqueCrewSpaceEXPhs2
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueDriveStern2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DallesqueDriveStern2
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueDriveStern3]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque Drive Stern3
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueDrivenStern1]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque Driven Stern1
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueHangarlSec3Long]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque Hangar Sec3Long
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueHullSec3Long]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DallesqueHullSec3Long
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueHullSection2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DallesqueHullSection2
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueHullsec5]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DallesqueHullsec5
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueHumpHullAftSec5]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque Hump Hullsec5
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueHumpVLS]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque Hump VLS
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueHumpVLSheavy]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque Hump SLBM VLS
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueHumpfwdHullSec1]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque HumpBack fwd Hull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueHumpfwdHullSec1long]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque HumpBack Long fwd Hull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueMK48Torpedo]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque MK48 Torpedo
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesquePeriscope]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DallesquePeriscope
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesquePlainBow]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DallesquePlainBow
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesquePlainStern1]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DallesquePlainStern1
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueShortPlainBow]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque Short Plain Bow
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueShortShortBow]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque Very Short Plain Bow
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueSonarPod]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque Sonar Pod
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueStern3]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DallesquePlainStern3
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueSternTaper1]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DallesqueSternTaper1
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueTopedoHullFwd]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque Torpedo Hull Fwd
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueTorp20]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DallasTestTorp20
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueTorpBow]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DallesqueSub Torpedo Bow
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueTorpBow2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DallesqueSub Torpedo Bow2
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueTorpHullBow]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque Torpedo Hull Bow
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesqueVlsMainGroup]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque Vls MainGroup
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesquefwdHull]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DallesquefwdHull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DallesquefwdVLS]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Dallesque SHORT Vls MainGroup
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DeepSixTSA]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Deep Six Towed Sonar Array SA
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[DryDockAlpha]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // DryDockAlpha
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[ExtendSonar]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Sonar deployable
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Extendradar]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Radar Horizon peeking
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[ExtraLongAnimHeliNets]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Animated HeliDeck Net ExtraLong
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[ExtraLongAnimHeliNetsB]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Animated HeliDeck Net ExtraLong TypeB
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[FASV]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Fleet Auxiliary Supply Vessel FASV
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[FASVcargoCover]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // FASV cargo Cover
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[FASVcargoDeck]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // FASV cargo Deck
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[FASVdeck]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // FASV Deck top main
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[FixedPosHeliNets]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Fixed Pos HeliDeck Net
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[FuctionalLifeboat]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // FunctionalLifeboat
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[HeliPadCatcher]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Heli PAd heli Catcher
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[HovStorageBay]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Hover Storage Module
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[HovStorageBay2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Hover Storage Module2
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Hull7FlareBow]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Hull7FlareBow
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Hull8Deck1]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // h8 Deck top main
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Hull8Deck2Aft]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Hull 8 Deck2 Aft
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Hull8Deck2Main]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Hull 8 Deck2 Main
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Hull8Ute]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Hull 8 Utility Hull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Hull8UtilitySmall]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Hull 8 Small Hull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Hull8deck2Fore]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Hull8 deck2 Fore
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Hull8deck2stairaft]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Hull 8 deck2 stair aft
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Hull9Kat16]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Hull 9 Kat16 Catamaran
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[JClassSonar]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // JClassSonar
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[JclassHull3CLong]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // JclassHullBow3C Long
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[JclassHull4]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // JclassHull Hull4
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[JclassHull4BShort]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // JclassHull Hull4 B Short
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[JclassHull4fueltank]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // JclassHull4fueltank
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[JclassHull5]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // JclassHull Hull5
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[JclassHull5BShort]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // JclassHull Hull 5 B Short
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[JclassHull5FuelTank]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // JclassHull5FuelTank
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[JclassHull6ER]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // JclassHull 6 ER
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[JclassHull7]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // JclassHull 7
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[JclassHullBow1]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // JclassHullBow1
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[JclassHullBow2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // JclassHullBow2
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[JclassHullBow3]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // JclassHullBow3
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[JclassHullBow3BLong]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // JclassHullBow3B Long
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[JclassHullBow3fueltank]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // JclassHullBow3fueltank
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[JclassHullStern]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // JclassHull Stern 8
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[LCACdeck]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // LCAC deck
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LCACdeckS]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // LCAC deck Small
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LS1Aft]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // LS17 Stern
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LSMainCentHull]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // LS17 Long Hull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LSShortHull]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // LS17 Short Hull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LSUpperAftDck]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // LS17 Aft Deck
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LSUpperAftDck2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // LS17 Aft Deck2
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LSUpperAftDck3]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // LS17 Aft Deck3
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LSUpperAftDckslope]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // LS17 Aft Deck slope
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LSbow]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // LS17 Bow section
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LSmainDeck]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // LS17 long Deck
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LSshortDeckMain]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // LS17 Short Deck
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LargeRadomeRadarUnit]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Large Radome Marine Detection Radar
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LifeboatGreeblePort]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // lifeboat on davits port
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LifeboatGreebleStbd]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // lifeboat on davits Stbd
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LiferaftPairGreb]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // LiferaftSingleGreb
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LiferaftSingleGreb]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // LiferaftSingleGreb
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LongAnmiHeliNets]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Animated HeliDecks Safety Net Long
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[LongAnmiHeliNetsB]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Animated HeliDecks Safety Net Long Type B
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[MPVEngAndPumps]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // MPVEngAndPumps
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[MPVbow]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // MPV Bow Section
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[MPVlongHULL]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // MPV long Hull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[MPVmedHUll]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // MPV medium Hull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[MPVshortHull]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // MPV short Hull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[MPVstern]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // MPV stern section
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[MSDiveUnit]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Minisub DiveUnit
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[MSdiveplane]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Minisub dive and control plane
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[MarineArmorPanel?3x1panel]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Marine Armor Panel 3x1panel
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[MarineArmorPanel1x1slopanel]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // MarineArmorPanels 1x1slopanel
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[MarineArmorPanel2x1panel]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // MarineArmorPanel 2x1panel
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[MarineArmorPanel2x1slope]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // MarineArmorPanel 2x1slope
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[MarineArmorPanel4x1panel]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Marine Armor Panel 4x1panel
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[MarineArmorPanelx1Tri]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // 1x1TriArmor
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[MarineCtrlSrf2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Marine Ctrl Srf 2
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[MarineTrimPlane]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // MarineTrimPlane
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Mast11SMM]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Main Mast 1
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[Mast11SMMs]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Main Mast 1s
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[Mast12]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Nav Mast 12
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[Mast17]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Nav Mast 17
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[Mastsixbase]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Mast six base
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[Mastsixtower]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // mast six tower
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[MastsixtowerTall]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Mast six Tower Tall
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[MinisubCDU]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // MiniSub CrashDive Unit
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[MinisubFSU]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // MiniSub Fast SurfacingUnit
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[MinisubHab]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Minisub Crew and science unit
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[MinisubStern]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // MiniSub experimental drive
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[MinisubXTU]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Minisub Hull Extension Unit
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[MinsubFloat]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Minisub upper float
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[MninSubTrim]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // MiniSub TRIM Unit
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[NavLghtMast]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Nav Mast With Navlights
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[NavMastBare]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Nav Mast Bare
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[NavMastSix]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Mast six Bare
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[ParabolicRadar]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Parabolic Radar Unit (NO LOCK)
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[PortHoleGrebLit]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Port Hole Greeble Lit
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[RC1FlyBridge]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // RC1FlyBridge
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[RC1Prop]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // RC1Prop Type1
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[RC1Rudder]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // RC1Rudder
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[RC1crew]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // RC1crew accommodation
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[RC1hull]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // RC1 Riverine
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[RIB10mtr]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // RIB 10 mtr
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[RadarBar]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Bar type Detection Radar
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[RadarDiffuserRail2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Radar Diffuser Rail2
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Radome1SMRadarUnit]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Radome Marine Detection Radar
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[RafHull]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // RAF rescue hull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[RakedLghtMast]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Raked Nav Mast with Navlights
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[RakedMast]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Raked Nav Mast
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[S1850MRadar]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // S1850M Radar Unit
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[SMGoFast]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // SM Go Fast
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[SampsonRadar]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Sampson Radar Unit
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[SampsonRadar2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Sampson Radar Unit2
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[ScrambleNetLarge]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // ScrambleNetLarge
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[SeagnatCM]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Seagnat Marine Countermeasure diospenser
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[ShipHatchGreb]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Ship Hatch Greeble
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[ShipHatchGreb2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Ship Hatch and frame Greeble
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[ShippingContainer]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Shipping Container (harmless)
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[SmokeStack1]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // SmokeStack ColdStack
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[SmokeStack2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // SmokeStack 2 ColdStack
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[SmokeStack3]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // SmokeStack 3 ColdStack
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[SooperSinkerSmall]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Sooper Sinker Small
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[SooperSinkerSmallRadial]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Sooper Sinker Small Radial
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[StairLeft]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // StairLeft
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[StairMarinetwinrail2mtr]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // StairMarineTwinRail2mtr
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[StairRightRail]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // StairRightRail
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[SternGearType1]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Stern Gear Type1
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[StructFrameLong]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Struct Frame Long
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[StructFrameLong3]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Struct Frame Long 3
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[StructFrameLong4]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Struct Frame Long 4
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[StructFrameShort]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Struct Frame Short
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[StructuralFrame5EndSml]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Struct Frame End small  5
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[StructuralFrame6EndMed]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Struct Frame End Med 6
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[SubPropellorDrive]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Sub Propellor Drive
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[SubmarineWaterJet2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Submarine DualModeWater Jet2
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[T45ArrayTowerFull]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type 45 ArrayTowerFull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[T45BridgeDeck]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type 45 BridgeDeck (part2)
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[T45ComsMastB]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type 45 ComsMastB
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[T45Hangar]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type 45 Hanagr
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[T45IntakeTower]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type 45 Intake Tower
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[T45Spraybrake]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type 45 Spraybrake
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[T45Stack]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type 45 Stack
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[T45SuperBaseAft]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type 45 Super Base Aft
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['Size3']
	}
}

@PART[T45SuperMidExt]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type 45 SuperMidExt (part7)
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['Size3']
	}
}

@PART[T45SuperTorpedoAft]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // T45 Super Torpedo Aft
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['Size3']
	}
}

@PART[T45TowerBare]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type 45 Tower
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[T45UpperFwdSuper]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type 45 UpperFwdSuper (part6)
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['Size3']
	}
}

@PART[T45VLSlauncher]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type 45 VLS launcher
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[T45VLSlauncherB]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type 45 VLS launcher Btype
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[T45bridgeBase]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type 45 bridgeBase (part3)
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[T45superMid]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type 45 Super Mid
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['Size3']
	}
}

@PART[TB1CrewspaceALL]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // TB1CrewspaceALL accommodation
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TB1DeckLadder]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // TB1DeckLadder
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TB1DeckStepsLeft]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // TB1DeckStepsLeft
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TB1DeckstepsRight]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // TB1DeckstepsRight
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TB1Funnel]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // SmokeStack ColdStack
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[TB1HullBare]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // TB1 TUG hull Bare
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TB1HullComp]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // TB1 TUG hull complete
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TB1Mast]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // TB1Mast
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TB1MidDeck]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // TB1MidDeck
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TB1pushBar]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // TB1 Push bar
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TB1pushBar2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // TB1 Push bar2
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TBTopDeck]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // TBTopDeck
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TactAssTSA]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Tactical Towed Array Sonar System
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TactAssTSAmount]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // TactAss TSA mount launcher (KAS winch equipped)
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TestStairsShortStairs1m1]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // ShortStairs1m
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TestStairslongstairs2m1]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // longstairs2m1
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Tugdrivenozzle]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // TUG TB1 Drive Nozzle
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Type45Deck]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type 45 Deck
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Type45Hull]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type45Hull (part5)
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Type45VLScoverplate]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Type 45 VLS coverplate
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TyphAftHull]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Typhoon Aft HullSec
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TyphBow]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Typhoon Torpedo Bow
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TyphConTower]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Typhoon Control Tower
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TyphDrive]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Typhoon Main Drive
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TyphDrive2oscar]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Typhoon Main Drive 2 Oscar
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TyphHull1]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Typhoon HullSec 1
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TyphHullTypeB]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Typhoon HullSec TypeB
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TyphLowerBridge]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Typhoon Lower Bridge
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TyphMidHull]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Typhoon Mid Hull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TyphModMisVLS]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Typhoon Modular Missile Vls
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TyphPlainHullA]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Typhoon HullSec TypeA
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[TyphVLSMAin]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Typhoon Vls MainGroup
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[UniDeck]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Universal Deck
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[WW2Mast]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // WW2 tall Nav Mast
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size0', 'srf']
	}
}

@PART[WaterJetExperimental]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Water Jet Small
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[WaterJetLarge]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Water Jet Large
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[ZDriveNozzle]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Z Drive Nozzle
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[ZdriveTranMount]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Z Drive Nozzle Type2
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Zed2Hull]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Zed 2 Hull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Zed2bHull]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Zed 2b Hull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Zed5VSLHull]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Zed 5 VLS Hull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Zed6]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Kraken class Corvette Hull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Zed6AftDeck]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Kraken class Corvette Aft Deck
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Zed6super1]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Kraken Class Corvette Superstructure 1
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Zed6super1b]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Kraken Class Corvette Superstructure 1b
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Zed6super1c]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Kraken Class Corvette Superstructure 1c
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Zed6super2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Kraken Class Corvette Superstructure 2
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Zed6super2b]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Kraken Class Corvette Superstructure 2b
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Zed6super2c]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Kraken Class Corvette Superstructure 2c
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Zed6super2d]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Kraken Class Corvette Superstructure 2d
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Zed7BStampede]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Z7B Stampede class Corvette Hull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[Zed7Stampede]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Stampede class Corvette Hull
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[deck2p1s]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // h7 shortDecks aft
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[deck2p2m]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // h7 shortDecks mid
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[deck2p3B]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // h7 shortDecks bow
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[lifeboatGreebDeco]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // lifeboat GreebDeco
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[maindeckH7]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // h7 MAin Decks
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[minisubMotorType3]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // MiniSub Motor Type3
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[minisubmotorType2]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // MiniSub Motor Type2A
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[spraybrake1small]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // spraybrake1
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[spraybrake2Large]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // spraybrake 2 large
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = --
	}
}

@PART[tallventGreb]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Intake Vent Hover
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['srf']
	}
}

@PART[DSAdippingSonar]:NEEDS[SM_Marine,TweakScale]:FOR[TweakScaleCompanion_SMCE_SMM] // Deep Six Air Dipping Sonar
{
	%MODULE[TweakScale]
	{
		type = ?
		defaultScale = ['size1']
	}
}

